<table id="player-table" class="ui celled striped sortable unstackable table">
    <thead>
    <tr>
        <th class="num" data-title="Rank" data-content="The Rank of the player"></th>
        <th data-title="Player" data-content="The name of the player">Player</th>
        <th class="num" data-title="Games" data-content="The total number of games">#</th>
        <th class="num" data-title="Wins" data-content="The total number of wins">W</th>
        <th class="num" data-title="Losses" data-content="The total number of losses">L</th>
        <th class="num" data-title="Win Ratio" data-content="The Ratio of Wins to Losses">W/L</th>
        <th class="num sorted descending" data-title="Rating"
            data-content="A Rating for the player based on both μ and σ"><span style="font-size:0.8rem">Rating</span>
        </th>
        <th data-title="95% Confidence Interval"
            data-content="If the bar does not overlap with that of another player, we are 95% sure that the one with higher skill is actually the better player.">
            Interval
        </th>
    </tr>
    </thead>
    <tbody>
    {% for p in players %}
        <tr>
            <td>{{ loop.index }}</td>
            <td><a href="./player/{{ p.name }}/" class="playerlink">{{ p.name }}</a></td>
            <td>{{ p.matches|length }}</td>
            <td>{{ p.wins()|length }}</td>
            <td>{{ p.losses()|length }}</td>
            <td>{% if p.losses() %}{{ "%0.1f" % ((p.wins()|length)/(p.losses()|length)) }}{% else %}∞{% endif %}</td>
            <td>{{ "%0.1f" % p.exposure() }}</td>
            <td class="skillgraph nostretch"></td>
        </tr>
    {% endfor %}
    </tbody>
</table>

<script src="{{ request.static_url('volley:static/jquery.tablesort.min.js',_scheme='https') }}"></script>
<script src="https://cdn.jsdelivr.net/npm/d3@5.5.0/dist/d3.min.js"></script>
<script src="{{ request.static_url('volley:static/player_table.js',_scheme='https') }}"></script>
<script>
    var data = [
        {% for p in players %}
            {mu: {{"%0.1f" % p.skill()}}, sigma: {{ "%0.1f" % p.confidence() }}},
        {% endfor %}
    ];
    make_confidence_bars(data);
</script>

<style type="text/css">
    svg line {
        stroke-width: 2;
        stroke: #636363;
    }

    svg circle {
        fill: #636363;
    }

    svg .highlight-overlay {
        fill-opacity: 0.2;
        pointer-events: none;
    }

    td.nostretch {
        width: 1%;
        white-space: nowrap;
    }
</style>